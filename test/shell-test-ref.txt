$ dx --dex --output build/source.dex source/build/libs/source.jar

$ dx --dex --output build/patch.dex patch/build/libs/patch.jar

$ dexpatcher --help
DexPatcher Version 1.0.0 by Lanchon
usage: dexpatcher [<option> ...] [--output <patched-dex>]
                  <source-dex-or-apk> [<patch-dex-or-apk> ...]
 -?,--help                   print this help message and exit
 -a,--api-level <n>          api level of dex files (defaults to 14)
    --debug                  output debugging information
 -o,--output <patched-dex>   name of patched dex file to write
 -q,--quiet                  do not output warnings
    --stats                  output timing statistics
 -v,--verbose                output extra information
    --version                print version information and exit
 -X,--experimental           enable support for experimental opcodes

$ dexpatcher build/source.dex build/patch.dex --output build/patched.dex --debug
info: read 'build/source.dex'
info: read 'build/patch.dex'
debug: type 'lanchon.dexpatcher.annotation.DexAction': ignore
debug: type 'lanchon.dexpatcher.annotation.DexAdd': ignore
debug: type 'lanchon.dexpatcher.annotation.DexEdit': ignore
debug: type 'lanchon.dexpatcher.annotation.DexIgnore': ignore
debug: type 'lanchon.dexpatcher.annotation.DexRemove': ignore
debug: type 'lanchon.dexpatcher.annotation.DexReplace': ignore
debug: type 'lanchon.dexpatcher.annotation.DexTag': add
debug: type 'lanchon.dexpatcher.annotation.DexTarget': ignore
debug: type 'test.Main$A': replace
debug: type 'test.Main$Abstract': ignore
debug: type 'test.Main$B': edit
debug: type 'test.Main$B': static field 'staticField:I': add
debug: type 'test.Main$B': instance field 'instanceField:I': add
debug: type 'test.Main$B': instance field 'privateKey:Ljava/lang/String;': edit
info: type 'test.Main$B': instance field 'privateKey:Ljava/lang/String;': 'public' modifier mismatch in original and edited versions
info: type 'test.Main$B': instance field 'privateKey:Ljava/lang/String;': 'private' modifier mismatch in original and edited versions
debug: type 'test.Main$B': direct method '<clinit>()V': add
debug: type 'test.Main$B': direct method '<init>()V': ignore
debug: type 'test.Main$B': direct method 'directMethod()V': replace
debug: type 'test.Main$B': direct method 'privateStaticMethod(I)V': edit
info: type 'test.Main$B': direct method 'privateStaticMethod(I)V': 'public' modifier mismatch in original and edited versions
info: type 'test.Main$B': direct method 'privateStaticMethod(I)V': 'private' modifier mismatch in original and edited versions
debug: type 'test.Main$B': virtual method 'addedMethod()V': add
debug: type 'test.Main$B': virtual method 'source_virtualMethod(Ljava/lang/String;)V': edit
debug: type 'test.Main$B': virtual method 'source_virtualMethod(Ljava/lang/String;)V': target 'virtualMethod': 'public' modifier mismatch in targeted and edited members
debug: type 'test.Main$B': virtual method 'source_virtualMethod(Ljava/lang/String;)V': target 'virtualMethod': 'protected' modifier mismatch in targeted and edited members
debug: type 'test.Main$B': virtual method 'virtualMethod(Ljava/lang/String;)V': add
debug: type 'test.Main$Base': ignore
debug: type 'test.Main$C': edit
debug: type 'test.Main$C': static field 'patchStaticField:I': add
warning: type 'test.Main$C': static field 'patchStaticField:I': field will not be initialized as specified in patch because the static constructor code in patch is being ignored
debug: type 'test.Main$C': static field 'redefinedSourceStaticField:I': edit
warning: type 'test.Main$C': static field 'redefinedSourceStaticField:I': field will not be initialized as specified in patch because the static constructor code in patch is being ignored
debug: type 'test.Main$C': instance field 'patchField:I': add
debug: type 'test.Main$C': instance field 'redefinedSourceField:I': edit
debug: type 'test.Main$C': direct method '<clinit>()V': ignore
debug: type 'test.Main$C': direct method '<init>()V': ignore
debug: type 'test.Main$C': virtual method 'print()V': add
debug: type 'test.Main$C': virtual method 'source_print()V': edit
debug: type 'test.Main$C': virtual method 'source_print()V': target 'print': 'public' modifier mismatch in targeted and edited members
debug: type 'test.Main$C': virtual method 'source_print()V': target 'print': 'protected' modifier mismatch in targeted and edited members
debug: type 'test.Main$Interface': ignore
debug: type 'test.Main$Concrete1': edit
debug: type 'test.Main$Concrete1': direct method '<init>()V': ignore
debug: type 'test.Main$Concrete1': virtual method 'abstractMethod()V': ignore
debug: type 'test.Main$Concrete1': virtual method 'interfaceMethod()V': ignore
debug: type 'test.Main$Concrete1': virtual method 'method()V': replace
debug: type 'test.Main$Concrete2': edit
debug: type 'test.Main$Concrete2': direct method '<init>()V': ignore
debug: type 'test.Main$Concrete2': virtual method 'method()V': replace
debug: type 'test.Main$Concrete3': edit
debug: type 'test.Main$Concrete3': direct method '<init>()V': ignore
debug: type 'test.Main$Concrete3': virtual method 'method()V': replace
debug: type 'test.Main$D': edit
debug: type 'test.Main$D': static field 'patchStaticField:I': add
debug: type 'test.Main$D': static field 'redefinedSourceStaticField:I': edit
debug: type 'test.Main$D': instance field 'patchField:I': add
debug: type 'test.Main$D': instance field 'redefinedSourceField:I': edit
debug: type 'test.Main$D': direct method '<clinit>()V': replace
debug: type 'test.Main$D': direct method '<init>()V': replace
debug: type 'test.Main$D': virtual method 'print()V': add
debug: type 'test.Main$D': virtual method 'source_print()V': edit
debug: type 'test.Main$D': virtual method 'source_print()V': target 'print': 'public' modifier mismatch in targeted and edited members
debug: type 'test.Main$D': virtual method 'source_print()V': target 'print': 'protected' modifier mismatch in targeted and edited members
debug: type 'test.Main$Derived': edit
info: type 'test.Main$Derived': direct method '<init>()V': default ignore
debug: type 'test.Main$Derived': direct method '<init>()V': ignore
debug: type 'test.Main$Derived': virtual method 'method()V': add
debug: type 'test.Main$Derived': virtual method 'source_method()V': edit
debug: type 'test.Main$Derived': virtual method 'source_method()V': target 'method': 'public' modifier mismatch in targeted and edited members
debug: type 'test.Main$Derived': virtual method 'source_method()V': target 'method': 'protected' modifier mismatch in targeted and edited members
debug: type 'test.Main$E': edit
debug: type 'test.Main$E': static field 'patchStaticField:I': add
debug: type 'test.Main$E': static field 'redefinedSourceStaticField:I': edit
debug: type 'test.Main$E': instance field 'patchField:I': add
debug: type 'test.Main$E': instance field 'redefinedSourceField:I': edit
info: type 'test.Main$E': direct method '<clinit>()V': default add
debug: type 'test.Main$E': direct method '<clinit>()V': add
debug: type 'test.Main$E': direct method '<init>(Ljava/lang/String;)V': add
debug: type 'test.Main$E': direct method '<init>(Ljava/lang/String;Llanchon/dexpatcher/annotation/DexTag;)V': edit
debug: type 'test.Main$E': direct method '<init>(Ljava/lang/String;Llanchon/dexpatcher/annotation/DexTag;)V': target 'null': 'public' modifier mismatch in targeted and edited members
debug: type 'test.Main$E': direct method '<init>(Ljava/lang/String;Llanchon/dexpatcher/annotation/DexTag;)V': target 'null': 'private' modifier mismatch in targeted and edited members
debug: type 'test.Main$E': direct method 'source_static()V': edit
debug: type 'test.Main$E': direct method 'source_static()V': target '<clinit>': 'private' modifier mismatch in targeted and edited members
debug: type 'test.Main$E': direct method 'source_static()V': target '<clinit>': 'constructor' modifier mismatch in targeted and edited members
debug: type 'test.Main$E': virtual method 'print()V': add
debug: type 'test.Main$E': virtual method 'source_print()V': edit
debug: type 'test.Main$E': virtual method 'source_print()V': target 'print': 'public' modifier mismatch in targeted and edited members
debug: type 'test.Main$E': virtual method 'source_print()V': target 'print': 'protected' modifier mismatch in targeted and edited members
debug: type 'test.Main': ignore
debug: type 'test.info.package-info': replace
debug: type 'test.info.package-info': replace package non-recursive
debug: type 'test.rec.package-info': remove
debug: type 'test.rec.package-info': remove package recursive
debug: type 'test.rec.package-info': remove type 'Ltest/rec/Rec;'
debug: type 'test.rec.package-info': remove type 'Ltest/rec/inner/RecInner;'
debug: type 'test.target.package-info': remove
debug: type 'test.target.package-info': target 'test.nonrec.package-info': remove package non-recursive
debug: type 'test.target.package-info': target 'test.nonrec.package-info': remove type 'Ltest/nonrec/NonRec;'
info: write 'build/patched.dex'
0 error(s), 2 warning(s)

$ dex2jar --force --output build/patched-dex2jar.jar build/patched.dex
dex2jar build/patched.dex -> build/patched-dex2jar.jar

--- run source/build/libs/source.jar ---
original A::<clinit>
original A::<init>

B::staticMethod: 42
original B::directMethod
original B::virtualMethod: data

entering original Derived::method
original Base::method
exiting original Derived::method

original C::<clinit>
original C::<init>
C::sourceStaticField: 100
C::sourceField: 100
C::redefinedSourceStaticField: 100
C::redefinedSourceField: 100

original D::<clinit>
original D::<init>
D::sourceStaticField: 100
D::sourceField: 100
D::redefinedSourceStaticField: 100
D::redefinedSourceField: 100

original E::<clinit>
original E::<init>: data
E::sourceStaticField: 100
E::sourceField: 100
E::redefinedSourceStaticField: 100
E::redefinedSourceField: 100

Concrete1::interfaceMethod
Concrete1::abstractMethod
original Concrete1::method

Concrete2::interfaceMethod
Concrete2::abstractMethod
original Concrete2::method

Concrete3::interfaceMethod
Concrete3::abstractMethod
original Concrete3::method
--- end source/build/libs/source.jar ---

--- run build/patched-dex2jar.jar ---
replaced A::<clinit>
replaced A::<init>

B::staticMethod: 42
replaced B::directMethod
B::staticField: 100   <-- initialized
B::instanceField: 0   <-- *not* initialized
B::addedMethod
B::privateKey: my-key
entering replaced B::virtualMethod: data
original B::virtualMethod: filtered data
exiting replaced B::virtualMethod

entering replaced Derived::method
entering original Derived::method
original Base::method
exiting original Derived::method
exiting replaced Derived::method

original C::<clinit>
original C::<init>
C::sourceStaticField: 100
C::sourceField: 100
C::redefinedSourceStaticField: 100
C::redefinedSourceField: 100
C::patchStaticField: 0
C::patchField: 0

replaced D::<clinit>
replaced D::<init>
D::sourceStaticField: 0
D::sourceField: 0
D::redefinedSourceStaticField: 200
D::redefinedSourceField: 200
D::patchStaticField: 200
D::patchField: 200

entering replaced E::<clinit>
original E::<clinit>
exiting replaced E::<clinit>
original E::<init>: filtered data
continuing on replaced E::<init>: data
E::sourceStaticField: 100
E::sourceField: 100
E::redefinedSourceStaticField: 100
E::redefinedSourceField: 100
E::patchStaticField: 200
E::patchField: 0

Concrete1::interfaceMethod
Concrete1::abstractMethod
replaced Concrete1::method

Concrete2::interfaceMethod
Concrete2::abstractMethod
replaced Concrete2::method

Concrete3::interfaceMethod
Concrete3::abstractMethod
replaced Concrete3::method
--- end build/patched-dex2jar.jar ---

